{"version":3,"sources":["assets/photos/back.jpg","utils/actions.js","utils/reducers.js","utils/user.context.js","components/NewPlantForm.js","components/Hero.js","components/Plant.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_PLANT","DELETE_PLANT","TOGGLE_FORM","reducer","state","action","type","plants","plant","newPlants","filter","displayForm","UserContext","createContext","Provider","UserProvider","user","initialState","children","userName","useReducer","dispatch","value","useUserContext","useContext","NewPlantForm","useState","plantName","setPlantName","quantity","setQuantity","frequency","setFrequency","createFutureTimestamp","timestamp","Date","add","days","validateFormData","formData","plantStatus","error","trim","status","isDate","className","placeholder","onChange","e","target","parseInt","onClick","preventDefault","plantData","formStatus","trimmedStatus","replace","alert","handleFormSubmit","toggleDisplayForm","Hero","style","backgroundImage","background","Plant","currentPlant","Object","values","includes","pop","useEffect","isPast","console","log","id","src","Dashboard","length","map","idx","key","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7463fb1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/back.14dfcd4a.jpg\";","export const ADD_PLANT = \"ADD_PLANT\"\nexport const UPDATE_PLANT = \"UPDATE_PLANT\"\nexport const DELETE_PLANT = \"DELETE_PLANT\"\nexport const TOGGLE_FORM = \"TOGGLE_FORM\"","import { useReducer } from \"react\";\nimport { ADD_PLANT, UPDATE_PLANT, DELETE_PLANT, TOGGLE_FORM } from \"./actions\";\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_PLANT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplants: [...state.plants, action.plant],\n\t\t\t};\n\t\tcase DELETE_PLANT:\n\t\t\tconst newPlants = state.plants.filter((plant) => plant !== action.plant);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplants: newPlants,\n\t\t\t};\n\t\tcase TOGGLE_FORM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdisplayForm: !state.displayForm\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function useUserReducer(initialState) {\n\treturn useReducer(reducer, initialState);\n}\n","import { useContext } from \"react\";\nimport { createContext } from \"react\";\nimport { useUserReducer } from \"./reducers\";\n\nconst UserContext = createContext([[], () => {}]);\nconst { Provider } = UserContext;\n\n// wrapper for the provider\nconst UserProvider = ({ user, children }) => {\n\tconst [state, dispatch] = useUserReducer({\n\t\tuserName: \"\",\n\t\tdisplayForm: false,\n\t\tplants: [],\n\t});\n\n\treturn <Provider value={[state, dispatch]}>{children}</Provider>;\n};\n\nconst useUserContext = () => {\n\treturn useContext(UserContext);\n};\n\nexport { UserProvider, useUserContext };\n","import React, { useState } from \"react\";\n\nimport { ADD_PLANT, TOGGLE_FORM } from \"../utils/actions\";\nimport { useUserContext } from \"../utils/user.context\";\n\nimport { add, isDate } from \"date-fns\";\n\nexport default function NewPlantForm() {\n\tconst [state, dispatch] = useUserContext();\n\tconst [plantName, setPlantName] = useState(\"\");\n\tconst [quantity, setQuantity] = useState(null);\n\tconst [frequency, setFrequency] = useState(null);\n\n\tconst displayForm = state.displayForm;\n\n\tconst toggleDisplayForm = (e) => {\n\t\te.preventDefault();\n\t\tdispatch({ type: TOGGLE_FORM });\n\t};\n\n\tconst handleFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst timestamp = createFutureTimestamp(frequency);\n\t\tconst plantData = { plantName, quantity, frequency, timestamp };\n\t\tconst formStatus = validateFormData(plantData);\n\t\tif (!formStatus.error) {\n\t\t\tdispatch({ type: ADD_PLANT, plant: plantData });\n\t\t\tdispatch({ type: TOGGLE_FORM });\n\t\t} else {\n      const trimmedStatus = formStatus.error.trim().replace(/,$/g ,'')\n\t\t\talert(trimmedStatus);\n\t\t}\n\t};\n\n\tconst createFutureTimestamp = (frequency) => {\n\t\tconst timestamp = new Date();\n\t\treturn add(timestamp, { days: frequency });\n\t};\n\n\tconst validateFormData = (formData) => {\n\t\tconst { plantName, quantity, frequency, timestamp } = formData;\n\n\t\tconst plantStatus = { error: '' };\n\n\t\tif (!plantName.trim()) {\n\t\t\tplantStatus.error = \"Plant name required, \";\n\t\t}\n\t\tif (quantity <= 0) {\n\t\t\tplantStatus.error += \"Water Quantity required, \";\n\t\t}\n\t\tif (frequency <= 0) {\n\t\t\tplantStatus.error += \"Water Frequency required, \";\n\t\t\tplantStatus.status = false;\n\t\t}\n\t\tif (!isDate(timestamp)) {\n\t\t\tplantStatus.error += \"Failed to generate timestamp\";\n\t\t}\n\n\t\treturn plantStatus;\n\t};\n\n\treturn (\n\t\t<div className=\"add\">\n\t\t\t{displayForm ? (\n\t\t\t\t<form className=\"add__container\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Plant name.\"\n\t\t\t\t\t\tclassName=\"pName\"\n\t\t\t\t\t\tonChange={(e) => setPlantName(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"How much water?\"\n\t\t\t\t\t\tclassName=\"aWater\"\n\t\t\t\t\t\tonChange={(e) => setQuantity(parseInt(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"How often?\"\n\t\t\t\t\t\tclassName=\"often\"\n\t\t\t\t\t\tonChange={(e) => setFrequency(parseInt(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"add___btn\" onClick={(e) => handleFormSubmit(e)}>\n\t\t\t\t\t\tadd\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t) : (\n\t\t\t\t<div onClick={(e) => toggleDisplayForm(e)}>\n\t\t\t\t\t<span className=\"material-icons\">add</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport background from \"../assets/photos/back.jpg\";\nimport NewPlantForm from \"./NewPlantForm\";\n\nfunction Hero() {\n\treturn (\n\t\t<div className=\"top\" style={{ backgroundImage: `url(${background})` }}>\n\t\t\t<div className=\"jumbotron\">\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<h1> Water Me!</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAdd your plants to your profile page along with the amount\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\twater each pot needs and how often you water it.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t<NewPlantForm />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Hero;\n","import React, { useEffect } from \"react\";\nimport { useUserContext } from \"../utils/user.context\";\n\nimport { isPast } from \"date-fns\";\n\nimport { DELETE_PLANT } from \"../utils/actions\";\n\nexport default function Plant({ plantName, quantity, timestamp }) {\n\tconst [state, dispatch] = useUserContext();\n\tconst { plants } = state;\n\tconst currentPlant = plants\n\t\t.filter((plant) => Object.values(plant).includes(plantName))\n\t\t.pop();\n\n\tuseEffect(() => {\n\t\tif (isPast(timestamp)) {\n\t\t\tconsole.log(\"time to water\", timestamp);\n\t\t}\n\t}, []);\n\n\t// do stuff with plant data.\n\tconst handleRemovePlant = (e) => {\n\t\tdispatch({ type: DELETE_PLANT, plant: currentPlant });\n\t};\n\n\t// const handleWaterTimeStamp = (plant) => {\n\t// \tdispatch({type: UPDATE_PLANT}, {plant: plantData})\n\t// }\n\n\tconst waterMe = (frequencyWater, ID) => {\n\t\t// perform dom manipulation to reset watering indicator\n\t\tconsole.log(`plant has been watered!`);\n\t};\n\treturn (\n\t\t<div className=\"plant__clearfix\" id={1}>\n\t\t\t<button className=\"water\" onClick={() => waterMe()}>\n\t\t\t\twater\n\t\t\t</button>\n\t\t\t<button onClick={(e) => handleRemovePlant(e)}>X</button>\n\t\t\t<div> {plantName} </div>\n\t\t\t<div> {quantity} cups </div>\n\t\t\t<img src=\"https://picsum.photos/100/50\" />\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport { Plant } from \".\";\nimport { useUserContext } from \"../utils/user.context\";\n\nexport default function Dashboard() {\n\tconst [state, dispatch] = useUserContext();\n\tconst { plants } = state;\n\n\treturn (\n\t\t<div className=\"bottom\">\n\t\t\t<div className=\"plant__container\">\n\t\t\t\t{plants.length\n\t\t\t\t\t? plants.map((plant, idx) => <Plant {...plant} key={idx} />)\n\t\t\t\t\t: \"\"}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import \"./App.css\";\nimport { Hero, Dashboard } from \"./components\";\nimport React from \"react\";\nimport { UserProvider } from \"./utils/user.context\";\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<UserProvider>\n\t\t\t\t<Hero />\n\t\t\t\t<Dashboard />\n\t\t\t</UserProvider>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}